name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pip install uv

      - name: Set up cache for uv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-python${{ matrix.python-version }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python${{ matrix.python-version }}-uv-

      - name: Install dependencies
        run: |
          uv venv
          source .venv/bin/activate
          uv pip install --editable ".[dev,test]"

      - name: Lint with ruff
        run: |
          source .venv/bin/activate
          ruff check loggen/

      - name: Format check with ruff
        run: |
          source .venv/bin/activate
          ruff format --check loggen/

      - name: Type check with mypy
        run: |
          source .venv/bin/activate
          mypy loggen/

      - name: Run tests with pytest
        run: |
          source .venv/bin/activate
          pytest

      - name: Security check with bandit
        run: |
          source .venv/bin/activate
          bandit -r loggen/

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
